/*
Inspired by Bootstrap, this is a simple container system that uses CSS Grid to create a responsive layout from mobile -> desktop.
https: //getbootstrap.com/docs/4.0/layout/grid/
*/

.container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    max-width: 1024px;
    margin: 0 auto;
    width: 100%;
}

.container.fluid {
    max-width: 100%;
    /* full width */
}

.d-flex {
    display: flex;
}

.justify-content-center {
    justify-content: center;
    /* center the content horizontally */
}

.align-items-center {
    align-items: center;
    /* center the contents vertically */
}

.row {
    display: grid;
    gap: 0.5rem;
    grid-template-columns: repeat(12, 1fr);
    /* 12 columns */
    width: 100%;
    /* spacing between columns */
}

.col-12 {
    grid-column: span 12;
}

/*
grid break points based on this: https: //www.browserstack.com/guide/common-screen-resolutions
smallest screen width: 300px
tablet width: 768px
desktop width: 1024px
*/
@media screen and (min-width: 300px) {

    /* Mobile */
    .col-sm-12 {
        grid-column: span 12;
    }
}

@media screen and (min-width: 768px) {

    /* Tablet */
    .col-md-8 {
        grid-column: span 8;
    }

    .col-md-7 {
        grid-column: span 7;
    }

    .col-md-6 {
        grid-column: span 6;
    }

    .col-md-5 {
        grid-column: span 5;
    }

    .col-md-4 {
        grid-column: span 4;
    }
}

@media screen and (min-width: 1024px) {
    .col-lg-3 {
        grid-column: span 3;
    }

    .col-lg-9 {
        grid-column: span 9;
    }
}